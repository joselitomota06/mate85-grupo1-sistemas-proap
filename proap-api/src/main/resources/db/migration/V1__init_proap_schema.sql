--- V1__init_proap_schema.sql
-- Baseline schema for the PROAP application
-- Creates schema, sequences, tables, primary keys, constraints, and indexes
-- Idempotent: uses IF NOT EXISTS / GENERATED IDENTITY to allow repeatable execution without errors

--------------------------------------------------------------------------------
-- 1. Schema
--------------------------------------------------------------------------------
CREATE SCHEMA IF NOT EXISTS proap;

--------------------------------------------------------------------------------
-- 2. Sequences (only for tables that still use nextval())
--------------------------------------------------------------------------------
CREATE SEQUENCE IF NOT EXISTS proap.aut_perfil_id_seq
  START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;

CREATE SEQUENCE IF NOT EXISTS proap.aut_permission_id_seq
  START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;

--------------------------------------------------------------------------------
-- 3. Core reference tables
--------------------------------------------------------------------------------
-- Profiles
CREATE TABLE IF NOT EXISTS proap.aut_perfil (
    id   BIGINT PRIMARY KEY DEFAULT nextval('proap.aut_perfil_id_seq'),
    name VARCHAR(255) NOT NULL UNIQUE
);

-- Permissions
CREATE TABLE IF NOT EXISTS proap.aut_permission (
    id          BIGINT PRIMARY KEY DEFAULT nextval('proap.aut_permission_id_seq'),
    key         VARCHAR(255) NOT NULL UNIQUE,
    description VARCHAR(255) NOT NULL,
    enabled     BOOLEAN NOT NULL DEFAULT TRUE
);

--------------------------------------------------------------------------------
-- 4. Authentication / Authorisation
--------------------------------------------------------------------------------
-- Users
CREATE TABLE IF NOT EXISTS proap.aut_user (
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    alternative_phone VARCHAR(255),
    cpf              VARCHAR(255) UNIQUE,
    created_at       TIMESTAMP,
    email            VARCHAR(255) NOT NULL UNIQUE,
    name             VARCHAR(255) NOT NULL,
    password         VARCHAR(255),
    phone            VARCHAR(255),
    registration     VARCHAR(255),
    updated_at       TIMESTAMP,
    version          INT NOT NULL,
    perfil_id        BIGINT REFERENCES proap.aut_perfil(id)
);

-- Perfil‑Permission (many‑to‑many)
CREATE TABLE IF NOT EXISTS proap.aut_perfil_permission (
    perfil_id     BIGINT NOT NULL,
    permission_id BIGINT NOT NULL,
    PRIMARY KEY (perfil_id, permission_id),
    FOREIGN KEY (perfil_id)     REFERENCES proap.aut_perfil(id)     ON DELETE CASCADE,
    FOREIGN KEY (permission_id) REFERENCES proap.aut_permission(id) ON DELETE CASCADE
);

-- Password‑reset tokens
CREATE TABLE IF NOT EXISTS proap.password_reset_token (
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    expiry_date  TIMESTAMP NOT NULL,
    token        VARCHAR(255) NOT NULL UNIQUE,
    user_id      BIGINT NOT NULL UNIQUE REFERENCES proap.aut_user(id)
);

--------------------------------------------------------------------------------
-- 5. Configuration & reference data
--------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS proap.proap_system_configuration (
    id                                BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at                        TIMESTAMP,
    enable_solicitation               BOOLEAN NOT NULL,
    num_max_diarias                   INT,
    qualis                            TEXT,
    resolucao_proapurl                VARCHAR(255),
    site_pgcompurl                    VARCHAR(255),
    texto_aviso_envio_arquivo_carta   TEXT,
    texto_aviso_qualis                TEXT,
    texto_aviso_valor_inscricao       TEXT,
    texto_informacao_calcular_qualis  TEXT,
    texto_informacao_qtd_diarias      TEXT,
    texto_informacao_valor_diaria     TEXT,
    texto_informacao_valor_passagem   TEXT,
    updated_at                        TIMESTAMP,
    valor_diariabrl                   NUMERIC(19,4)
);

CREATE TABLE IF NOT EXISTS proap.proap_country_group (
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    countries               TEXT,
    group_name              VARCHAR(255),
    valueusd                NUMERIC(19,4),
    system_configuration_id BIGINT REFERENCES proap.proap_system_configuration(id)
);

CREATE TABLE IF NOT EXISTS proap.proap_url_mapper (
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    field_name              VARCHAR(255),
    url                     VARCHAR(255),
    url_title               VARCHAR(255),
    system_configuration_id BIGINT REFERENCES proap.proap_system_configuration(id)
);

--------------------------------------------------------------------------------
-- 6. Business entities
--------------------------------------------------------------------------------
-- Assistance Request
CREATE TABLE IF NOT EXISTS proap.proap_assistancerequest (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    aceite_final                     BOOLEAN,
    afastamento_para_participacao    BOOLEAN NOT NULL,
    algum_coautorpgcomp              BOOLEAN NOT NULL,
    automatic_dec_text               TEXT,
    carta_aceite                     VARCHAR(255),
    cidade                           VARCHAR(255) NOT NULL,
    coautores                        VARCHAR(255),
    comprovante_pagamento            VARCHAR(255),
    cotacao_moeda                    NUMERIC(19,4),
    created_at                       TIMESTAMP,
    custo_final_ceapg                NUMERIC(19,4),
    data_avaliacao_ceapg             DATE,
    data_avaliacao_proap             DATE,
    data_fim                         DATE,
    data_inicio                      DATE NOT NULL,
    dias_afastamento                 INT,
    discente_no_prazo_do_curso       BOOLEAN,
    evento_internacional             BOOLEAN NOT NULL,
    is_dolar                         BOOLEAN,
    justificativa                    VARCHAR(255),
    link_home_page_evento            VARCHAR(255),
    link_pagina_inscricao            VARCHAR(255),
    meses_atraso                     INT,
    modalidade_participacao          VARCHAR(255) NOT NULL,
    nome_discente                    VARCHAR(255),
    nome_docente                     VARCHAR(255) NOT NULL,
    nome_evento                      VARCHAR(255) NOT NULL,
    numero_ata                       VARCHAR(255),
    numero_diarias_aprovadas         INT,
    observacao                       VARCHAR(255),
    observacoes_ceapg                VARCHAR(255),
    pais                             VARCHAR(255) NOT NULL,
    percentual_orcamento_anual       NUMERIC(5,2),
    qualis                           VARCHAR(255),
    quantidade_diarias_solicitadas   INT,
    situacao                         INT NOT NULL,
    solicitante_docente              BOOLEAN NOT NULL,
    titulo_publicacao                VARCHAR(255) NOT NULL,
    ultima_diaria_integral           BOOLEAN NOT NULL DEFAULT FALSE,
    updated_at                       TIMESTAMP,
    valor_aprovado                   NUMERIC(19,4),
    valor_diaria                     NUMERIC(19,4),
    valor_inscricao                  NUMERIC(19,4),
    valor_passagem                   NUMERIC(19,4),
    valor_total                      NUMERIC(19,4),
    avaliador_ceapg_id               BIGINT REFERENCES proap.aut_user(id),
    avaliador_proap_id               BIGINT REFERENCES proap.aut_user(id),
    user_id                          BIGINT REFERENCES proap.aut_user(id)
);

-- Extra Request
CREATE TABLE IF NOT EXISTS proap.proap_extra_request (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    automatic_dec_text                 TEXT,
    created_at                         TIMESTAMP,
    data_avaliacao_proap               DATE,
    item_solicitado                    VARCHAR(255),
    justificativa                      TEXT,
    nome_agencia_fomento              VARCHAR(255),
    nome_solicitacao                   VARCHAR(255),
    numero_ata                         VARCHAR(255),
    observacao                         VARCHAR(255),
    situacao                           INT NOT NULL,
    solicitacao_apoio                  BOOLEAN,
    solicitacao_auxilio_outras_fontes  BOOLEAN,
    titulo                             VARCHAR(255) NOT NULL DEFAULT 'Sem título',
    updated_at                         TIMESTAMP,
    valor_aprovado                     NUMERIC(19,4),
    valor_solicitado                   NUMERIC(19,4),
    valor_solicitado_agencia_formento  VARCHAR(255),
    user_id                            BIGINT REFERENCES proap.aut_user(id)
);

-- Review
CREATE TABLE IF NOT EXISTS proap.proap_review (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at               TIMESTAMP,
    data_avaliacao_proap     TIMESTAMP,
    numero_ata               VARCHAR(255) NOT NULL,
    numero_diarias_aprovadas INT NOT NULL,
    observacao               VARCHAR(255),
    situacao                 INT NOT NULL,
    updated_at               TIMESTAMP
);

-- Solicitation Admin
CREATE TABLE IF NOT EXISTS proap.proap_solicitation_admin (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    orcamento_anual NUMERIC(19,4) NOT NULL,
    year            INT           NOT NULL
);

--------------------------------------------------------------------------------
-- 7. Indexes & additional constraints
--------------------------------------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_aut_permission_enabled ON proap.aut_permission(enabled);